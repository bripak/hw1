
#include <iostream>
#include <sstream>
#include <fstream>

using namespace std;

int main(int argc, char* argv[])
{
  if (argc<2){
  	cout<< "Please enter file name to read as an argument"<< endl;
  	return 1;
  }
  
  ifstream fin;
  fin.open(argv[1]);
  
  if (fin.fail()){
  	cout<<"Error opening file"<< endl;
  	return 1;
  }

  int numbucks, commands;
  fin>> numbucks >>commands;
  //check if int
  if (fin.fail()){
  	cout<< "File Error"<< endl;
  	return 1;
  }

  int* size= new int [numbucks];
  for (int i = 0; i < numbucks; i++){
    size[i]= 0;
  }
  //create array for each bucket
  int** bucket = new int*[numbucks];

  int currentline= 0;
  fin.ignore();

  while(currentline<commands){
    
    string function, sequence;
    getline(fin, sequence);
    stringstream ss(sequence);

    string str(ss.str());

    ss>> function;

    int bucketno;

    if (function=="PUT"){
      ss>> bucketno;
      if (size[bucketno-1]!= 0){
      cout<< "Error - bucket "<< bucketno << " is not empty"<< endl;
        }   
      else {
        int digits;
        ss>> digits;
        size[bucketno-1]=digits;
        bucket[bucketno] = new int[digits];    //create an array in the bucket to hold the numbers
        for (int i = 0; i < digits; i++){
          ss>>bucket[bucketno][i];
          }
        }
      }  

    if (function == "OUTPUT"){
      ss>>bucketno;
      if(bucketno>numbucks || bucketno <= 0){
        cout<< "Bucket "<< bucketno << " does not exist"<< endl;
      }
      else if(size[bucketno-1]== 0){
        cout<< "empty"<< endl;
      }
      else{
        for(int i=0; i<size[bucketno-1]; i++){
          cout<< bucket[bucketno][i]<< " ";
        }
        cout<< endl;
      }

    }
    if (function =="EMPTY"){
      ss>> bucketno;  
      if(bucketno>numbucks || bucketno <= 0){
        cout<< "Bucket "<< bucketno << " does not exist"<< endl;
      }

      if(size[bucketno-1]== 0){
        cout<< "Bucket "<< bucketno << " is already empty"<< endl;
      }
      for (int i = 0; i < size[bucketno-1]; ++i)
      {
         delete [] bucket[i];
      }
     
      size[bucketno-1]=0;                
    }

  currentline++;
  }

  /*for (int i = 0; i < numbucks; ++i)
  {
    for (int j = 0; j < size[i+1]; j++)
    {
      delete bucket[j];
    }
  }
*/
  delete [] size;
  delete [] bucket;
  fin.close();

  return 0;
}
